Object.defineProperty(exports,"__esModule",{value:true});exports.expectors=exports.mocks=exports.renderers=exports.data=undefined;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _jsxFileName='src/test-utils.js';var _immutable=require('immutable');var _immutable2=_interopRequireDefault(_immutable);var _react=require('react');var _react2=_interopRequireDefault(_react);var _reactNative=require('react-native');var _reactTestRenderer=require('react-test-renderer');var _reactTestRenderer2=_interopRequireDefault(_reactTestRenderer);var _ImmutableListView=require('./ImmutableListView');var _ImmutableListView2=_interopRequireDefault(_ImmutableListView);var _ImmutableVirtualizedList=require('./ImmutableVirtualizedList');var _ImmutableVirtualizedList2=_interopRequireDefault(_ImmutableVirtualizedList);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var data={EMPTY_DATA:_immutable2.default.List(),LIST_DATA:_immutable2.default.List(['lists','are','great']),LIST_DATA_NESTED:_immutable2.default.List([['so','are'],['nested','lists']]),MAP_DATA_LIST_ROWS:_immutable2.default.fromJS({first:['m','a','p'],second:['foo'],third:[],fourth:['bar']}),MAP_DATA_MAP_ROWS:_immutable2.default.fromJS({first:{row1:'data 1',row2:'data 2'},second:{}}),SET_DATA:_immutable2.default.Set(['one','two','three']),RANGE_DATA:_immutable2.default.Range(3,10,3)};var renderers={renderRow:function renderRow(rowData){return _react2.default.createElement(_reactNative.Text,{__source:{fileName:_jsxFileName,lineNumber:76}},JSON.stringify(rowData));},renderItem:function renderItem(_ref){var item=_ref.item;return _react2.default.createElement(_reactNative.Text,{__source:{fileName:_jsxFileName,lineNumber:81}},JSON.stringify(item));},renderSectionHeader:function renderSectionHeader(sectionData,category){return _react2.default.createElement(_reactNative.Text,{header:true,__source:{fileName:_jsxFileName,lineNumber:89}},category+' ('+sectionData.size+' items)');}};var mocks={getImmutableListViewWithoutProps:function getImmutableListViewWithoutProps(){jest.resetModules();var mockScrollView=function mockScrollView(props){return _react2.default.createElement('ScrollView',{},props.children);};jest.doMock('ScrollView',function(){return mockScrollView;});return require('./ImmutableListView').default;}};var expectors={expectToMatchSnapshotWithData:function expectToMatchSnapshotWithData(immutableData,shouldRenderSectionHeaders){var renderSectionHeaderProps=shouldRenderSectionHeaders?{renderSectionHeader:renderers.renderSectionHeader}:{};var tree=_reactTestRenderer2.default.create(_react2.default.createElement(_ImmutableListView2.default,_extends({immutableData:immutableData,renderRow:renderers.renderRow},renderSectionHeaderProps,{__source:{fileName:_jsxFileName,lineNumber:123}}))).toJSON();expect(tree).toMatchSnapshot();},expectVirtualizedToMatchSnapshotWithData:function expectVirtualizedToMatchSnapshotWithData(immutableData){var tree=_reactTestRenderer2.default.create(_react2.default.createElement(_ImmutableVirtualizedList2.default,{immutableData:immutableData,renderItem:renderers.renderItem,__source:{fileName:_jsxFileName,lineNumber:134}})).toJSON();expect(tree).toMatchSnapshot();},expectToMatchListViewWithData:function expectToMatchListViewWithData(immutableData,shouldRenderSectionHeaders){var MockedImmutableListView=mocks.getImmutableListViewWithoutProps();var dataSource=new _reactNative.ListView.DataSource({rowHasChanged:function rowHasChanged(r1,r2){return r1!==r2;},sectionHeaderHasChanged:function sectionHeaderHasChanged(s1,s2){return s1!==s2;}});var renderSectionHeaderProps=shouldRenderSectionHeaders?{renderSectionHeader:renderers.renderSectionHeader}:{};var immutableTree=_reactTestRenderer2.default.create(_react2.default.createElement(MockedImmutableListView,_extends({immutableData:immutableData,renderRow:renderers.renderRow,renderEmptyInList:null},renderSectionHeaderProps,{__source:{fileName:_jsxFileName,lineNumber:155}}))).toJSON();var updatedDataSource=dataSource.cloneWithRows(immutableData.toJS());var regularTree=_reactTestRenderer2.default.create(_react2.default.createElement(_reactNative.ListView,_extends({dataSource:updatedDataSource,renderRow:renderers.renderRow},renderSectionHeaderProps,{__source:{fileName:_jsxFileName,lineNumber:165}}))).toJSON();expect(immutableTree).toEqual(regularTree);}};exports.data=data;exports.renderers=renderers;exports.mocks=mocks;exports.expectors=expectors;